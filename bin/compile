#!/usr/bin/env bash

# Fail Fase
set -e

# Path
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

# URL
PACKAGE_URL=${PACKAGE_URL:="https://github.com/IAlexanderI/buildpack-phalcon-heroku/releases/download/0.2.5-alpha/package.tar.gz"}
# If pre-compile already upload to github, it will replace vulcan cache url
# PACKAGE_URL=${PACKAGE_URL:="http://vulcan-aotoki.herokuapp.com/output/ee6a776e-1e3d-47b4-9ea8-dd65b298289f"}
COMPOSER_URL="http://getcomposer.org/composer.phar"

# Include .files when moving things around
shopt -s dotglob

# Prepare

cd $BUILD_DIR

# Moving Things to www
mkdir -p $CACHE_DIR/www
mv * $CACHE_DIR/www
mv $CACHE_DIR/www .

# Keep Procfile
if [ -f www/Procfile ]; then
  mv www/Procfile .
fi

# Install
echo "-----> Building Enviroment"

echo "-----> Downloading pre-compile package: $PACKAGE_URL"
curl --silent --max-time 60 --location "$PACKAGE_URL" | tar zx

tar -zxf libs.tar.gz
tar -zxf apache.tar.gz
tar -zxf php.tar.gz

rm -f libs.tar.gz
rm -f apache.tar.gz
rm -f php.tar.gz

# Update CONF
echo "-----> Updating Config"
cp $LP_DIR/conf/httpd.conf apache/conf
cp $LP_DIR/conf/php.ini php

# Setting up Enviroment
echo "-----> Setting up Enviroment"
mkdir -p bin
ln -s /app/php/bin/php bin/php

# Composer Dependencies
if [ -f www/composer.json ] && [ ! -d www/vendor ]; then
  PHP_EXTENSION_DIR=$($BUILD_DIR/php/bin/php-config --extension-dir)
  BUILD_PHP_EXTENSION_DIR=$(basename $PHP_EXTENSION_DIR)
  GIT_DIR_ORIG=$GIT_DIR
  unset GIT_DIR
  echo "-----> Installing Composer Dependencies"
  curl --silent --max-time 60 --location "$COMPOSER_URL" > www/composer.phar
  cd www
  LD_LIBRARY_PATH=$BUILD_DIR/php/lib/php/extensions/$BUILD_PHP_EXTENSION_DIR:$BUILD_DIR/libs/mcrypt/lib:$BUILD_DIR/libs/pcre/lib $BUILD_DIR/php/bin/php -c $LP_DIR/conf/php.ini composer.phar install --prefer-source
  cd $BUILD_DIR
  rm www/composer.phar
  export GIT_DIR=$GIT_DIR_ORIG
fi

# Create Boot File
echo "-----> Creating Boot File"

cat >>boot.sh <<EOF
  for var in \`env|cut -f1 -d=\`; do
    echo "PassEnv \$var" >> /app/apache/conf/httpd.conf;
  done
  touch /app/apache/logs/error_log
  touch /app/apache/logs/access_log
  tail -F /app/apache/logs/error_log &
  tail -F /app/apache/logs/access_log &
  export LD_LIBRARY_PATH=/app/php/ext
  export PHP_INI_SCAN_DIR=/app/www
  echo "Launching apache"
  exec /app/apache/bin/httpd -DNO_DETACH
EOF

chmod +x boot.sh

# Clean Up
rm -rf $CACHE_DIR/*
